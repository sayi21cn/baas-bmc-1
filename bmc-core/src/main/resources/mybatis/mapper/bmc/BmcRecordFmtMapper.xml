<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.baas.bmc.dao.interfaces.BmcRecordFmtMapper" >
  <resultMap id="BaseResultMap" type="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmt" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="service_type" property="serviceType" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="format_type" property="formatType" jdbcType="SMALLINT" />
    <result column="field_serial" property="fieldSerial" jdbcType="INTEGER" />
    <result column="field_name" property="fieldName" jdbcType="VARCHAR" />
    <result column="field_code" property="fieldCode" jdbcType="VARCHAR" />
    <result column="data_type" property="dataType" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="nullable" property="nullable" jdbcType="VARCHAR" />
    <result column="is_sn" property="isSn" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tenant_id, service_type, source, format_type, field_serial, field_name, field_code, 
    data_type, comments, nullable, is_sn
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmtCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bmc_record_fmt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from bmc_record_fmt
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from bmc_record_fmt
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmtCriteria" >
    delete from bmc_record_fmt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmt" >
    insert into bmc_record_fmt (id, tenant_id, service_type, 
      source, format_type, field_serial, 
      field_name, field_code, data_type, 
      comments, nullable, is_sn
      )
    values (#{id,jdbcType=INTEGER}, #{tenantId,jdbcType=VARCHAR}, #{serviceType,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{formatType,jdbcType=SMALLINT}, #{fieldSerial,jdbcType=INTEGER}, 
      #{fieldName,jdbcType=VARCHAR}, #{fieldCode,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{comments,jdbcType=VARCHAR}, #{nullable,jdbcType=VARCHAR}, #{isSn,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmt" >
    insert into bmc_record_fmt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="serviceType != null" >
        service_type,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="formatType != null" >
        format_type,
      </if>
      <if test="fieldSerial != null" >
        field_serial,
      </if>
      <if test="fieldName != null" >
        field_name,
      </if>
      <if test="fieldCode != null" >
        field_code,
      </if>
      <if test="dataType != null" >
        data_type,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="nullable != null" >
        nullable,
      </if>
      <if test="isSn != null" >
        is_sn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null" >
        #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="formatType != null" >
        #{formatType,jdbcType=SMALLINT},
      </if>
      <if test="fieldSerial != null" >
        #{fieldSerial,jdbcType=INTEGER},
      </if>
      <if test="fieldName != null" >
        #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="fieldCode != null" >
        #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="nullable != null" >
        #{nullable,jdbcType=VARCHAR},
      </if>
      <if test="isSn != null" >
        #{isSn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmtCriteria" resultType="java.lang.Integer" >
    select count(*) from bmc_record_fmt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bmc_record_fmt
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceType != null" >
        service_type = #{record.serviceType,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.formatType != null" >
        format_type = #{record.formatType,jdbcType=SMALLINT},
      </if>
      <if test="record.fieldSerial != null" >
        field_serial = #{record.fieldSerial,jdbcType=INTEGER},
      </if>
      <if test="record.fieldName != null" >
        field_name = #{record.fieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldCode != null" >
        field_code = #{record.fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null" >
        data_type = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.comments != null" >
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.nullable != null" >
        nullable = #{record.nullable,jdbcType=VARCHAR},
      </if>
      <if test="record.isSn != null" >
        is_sn = #{record.isSn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bmc_record_fmt
    set id = #{record.id,jdbcType=INTEGER},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      service_type = #{record.serviceType,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      format_type = #{record.formatType,jdbcType=SMALLINT},
      field_serial = #{record.fieldSerial,jdbcType=INTEGER},
      field_name = #{record.fieldName,jdbcType=VARCHAR},
      field_code = #{record.fieldCode,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=VARCHAR},
      comments = #{record.comments,jdbcType=VARCHAR},
      nullable = #{record.nullable,jdbcType=VARCHAR},
      is_sn = #{record.isSn,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmt" >
    update bmc_record_fmt
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="serviceType != null" >
        service_type = #{serviceType,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="formatType != null" >
        format_type = #{formatType,jdbcType=SMALLINT},
      </if>
      <if test="fieldSerial != null" >
        field_serial = #{fieldSerial,jdbcType=INTEGER},
      </if>
      <if test="fieldName != null" >
        field_name = #{fieldName,jdbcType=VARCHAR},
      </if>
      <if test="fieldCode != null" >
        field_code = #{fieldCode,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="nullable != null" >
        nullable = #{nullable,jdbcType=VARCHAR},
      </if>
      <if test="isSn != null" >
        is_sn = #{isSn,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.baas.bmc.dao.mapper.bo.BmcRecordFmt" >
    update bmc_record_fmt
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      service_type = #{serviceType,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      format_type = #{formatType,jdbcType=SMALLINT},
      field_serial = #{fieldSerial,jdbcType=INTEGER},
      field_name = #{fieldName,jdbcType=VARCHAR},
      field_code = #{fieldCode,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      nullable = #{nullable,jdbcType=VARCHAR},
      is_sn = #{isSn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>