<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.baas.bmc.dao.interfaces.RtmSrcInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfo" >
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="INFO_TYPE" property="infoType" jdbcType="VARCHAR" />
    <result column="INFO_SPLIT_FLAG" property="infoSplitFlag" jdbcType="VARCHAR" />
    <result column="record_split_flag" property="recordSplitFlag" jdbcType="VARCHAR" />
    <result column="field_split_flag" property="fieldSplitFlag" jdbcType="VARCHAR" />
    <result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TENANT_ID, INFO_TYPE, INFO_SPLIT_FLAG, record_split_flag, field_split_flag, COMMENTS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from rtm_src_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfoCriteria" >
    delete from rtm_src_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfo" >
    insert into rtm_src_info (TENANT_ID, INFO_TYPE, INFO_SPLIT_FLAG, 
      record_split_flag, field_split_flag, COMMENTS
      )
    values (#{tenantId,jdbcType=VARCHAR}, #{infoType,jdbcType=VARCHAR}, #{infoSplitFlag,jdbcType=VARCHAR}, 
      #{recordSplitFlag,jdbcType=VARCHAR}, #{fieldSplitFlag,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSpec" parameterType="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfo" >
    insert into rtm_src_info (TENANT_ID, INFO_TYPE, INFO_SPLIT_FLAG,
    record_split_flag, field_split_flag, COMMENTS
    )
    values (#{tenantId,jdbcType=VARCHAR}, #{infoType,jdbcType=VARCHAR}, 0x03,
    0x02, 0x01, #{comments,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfo" >
    insert into rtm_src_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="infoType != null" >
        INFO_TYPE,
      </if>
      <if test="infoSplitFlag != null" >
        INFO_SPLIT_FLAG,
      </if>
      <if test="recordSplitFlag != null" >
        record_split_flag,
      </if>
      <if test="fieldSplitFlag != null" >
        field_split_flag,
      </if>
      <if test="comments != null" >
        COMMENTS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="infoType != null" >
        #{infoType,jdbcType=VARCHAR},
      </if>
      <if test="infoSplitFlag != null" >
        #{infoSplitFlag,jdbcType=VARCHAR},
      </if>
      <if test="recordSplitFlag != null" >
        #{recordSplitFlag,jdbcType=VARCHAR},
      </if>
      <if test="fieldSplitFlag != null" >
        #{fieldSplitFlag,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.baas.bmc.dao.mapper.bo.RtmSrcInfoCriteria" resultType="java.lang.Integer" >
    select count(*) from rtm_src_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rtm_src_info
    <set >
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.infoType != null" >
        INFO_TYPE = #{record.infoType,jdbcType=VARCHAR},
      </if>
      <if test="record.infoSplitFlag != null" >
        INFO_SPLIT_FLAG = #{record.infoSplitFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.recordSplitFlag != null" >
        record_split_flag = #{record.recordSplitFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.fieldSplitFlag != null" >
        field_split_flag = #{record.fieldSplitFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.comments != null" >
        COMMENTS = #{record.comments,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rtm_src_info
    set TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      INFO_TYPE = #{record.infoType,jdbcType=VARCHAR},
      INFO_SPLIT_FLAG = #{record.infoSplitFlag,jdbcType=VARCHAR},
      record_split_flag = #{record.recordSplitFlag,jdbcType=VARCHAR},
      field_split_flag = #{record.fieldSplitFlag,jdbcType=VARCHAR},
      COMMENTS = #{record.comments,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>